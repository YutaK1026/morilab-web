---
import { translations } from '../../data/translations';

// ÁèæÂú®„ÅÆ„Éö„Éº„Ç∏„ÇíÂà§ÂÆö„Åô„Çã„Åü„ÇÅ„ÅÆ„É≠„Ç∏„ÉÉ„ÇØ
const currentPath = Astro.url.pathname;
const currentLang = currentPath.split('/')[1] || 'jp';
const t = translations[currentLang as keyof typeof translations];

const langOptions = [
  { code: 'jp', label: 'Êó•Êú¨Ë™û', flag: 'üáØüáµ' },
  { code: 'en', label: 'English', flag: 'üá∫üá∏' },
];
---

<header class="header">
  <div class="header-container">
    <!-- „É≠„Ç¥„Å®„Çø„Ç§„Éà„É´ -->
    <div class="logo-section">
      <div class="logo-container">
        <img src="/logo.png" alt="Ê£ÆÁ†î„É≠„Ç¥" class="logo-image" />
        <div class="logo-glow"></div>
      </div>
      <div class="title-section">
        <h1 class="lab-title">Mori Laboratory</h1>
        <p class="lab-subtitle">Medical Image Processing Research</p>
      </div>
    </div>

    <!-- „Éá„Çπ„ÇØ„Éà„ÉÉ„ÉóÁî®„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥ -->
    <nav class="nav-desktop">
      <ul class="nav-list">
        <li><a href={`/${currentLang}`} class={currentPath === `/${currentLang}` ? "active" : ""}>{t.home}</a></li>
        <li><a href={`/${currentLang}/themes`} class={currentPath === `/${currentLang}/themes` ? "active" : ""}>{t.themes}</a></li>
        <li><a href={`/${currentLang}/about`} class={currentPath === `/${currentLang}/about` ? "active" : ""}>{t.about}</a></li>
        <li><a href={`/${currentLang}/awards`} class={currentPath === `/${currentLang}/awards` ? "active" : ""}>{t.awardsHeader}</a></li>
        <li class="lang-dropdown-parent">
          <button class="lang-dropdown-btn" id="lang-dropdown-btn">
            <span class="lang-flag">{langOptions.find(l => l.code === currentLang)?.flag}</span>
            <span class="lang-label">{langOptions.find(l => l.code === currentLang)?.label}</span>
            <span class="lang-caret">‚ñæ</span>
          </button>
          <div class="lang-dropdown" id="lang-dropdown">
            {langOptions.map(lang => (
              <a href={currentPath.replace(/^\/(jp|en)/, `/${lang.code}`)} class={`lang-option${lang.code === currentLang ? ' active' : ''}`.trim()}>
                <span class="lang-flag">{lang.flag}</span>
                <span class="lang-label">{lang.label}</span>
              </a>
            ))}
          </div>
        </li>
      </ul>
    </nav>

    <!-- „Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº„Éú„Çø„É≥Ôºà„É¢„Éê„Ç§„É´Áî®Ôºâ -->
    <button class="hamburger" id="hamburger" aria-label="„É°„Éã„É•„Éº„ÇíÈñã„Åè">
      <span></span>
      <span></span>
      <span></span>
    </button>
  </div>

  <!-- „É¢„Éê„Ç§„É´Áî®„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥ -->
  <nav class="nav-mobile" id="nav-mobile">
    <ul class="nav-list-mobile">
      <li><a href={`/${currentLang}`} class={currentPath === `/${currentLang}` ? "active" : ""}>{t.home}</a></li>
      <li><a href={`/${currentLang}/themes`} class={currentPath === `/${currentLang}/themes` ? "active" : ""}>{t.themes}</a></li>
      <li><a href={`/${currentLang}/about`} class={currentPath === `/${currentLang}/about` ? "active" : ""}>{t.about}</a></li>
      <li><a href={`/${currentLang}/awards`} class={currentPath === `/${currentLang}/awards` ? "active" : ""}>{t.awardsHeader}</a></li>
      <li class="lang-dropdown-parent">
        <button class="lang-dropdown-btn" id="lang-dropdown-btn-mobile">
          <span class="lang-flag">{langOptions.find(l => l.code === currentLang)?.flag}</span>
          <span class="lang-label">{langOptions.find(l => l.code === currentLang)?.label}</span>
          <span class="lang-caret">‚ñæ</span>
        </button>
        <div class="lang-dropdown" id="lang-dropdown-mobile">
          {langOptions.map(lang => (
            <a href={currentPath.replace(/^\/(jp|en)/, `/${lang.code}`)} class={`lang-option${lang.code === currentLang ? ' active' : ''}`.trim()}>
              <span class="lang-flag">{lang.flag}</span>
              <span class="lang-label">{lang.label}</span>
            </a>
          ))}
        </div>
      </li>
    </ul>
  </nav>
</header>

<style>
  .header {
    background: var(--header-bg);
    backdrop-filter: var(--header-backdrop);
    -webkit-backdrop-filter: var(--header-backdrop);
    box-shadow: var(--header-shadow);
    position: sticky;
    top: 0;
    z-index: 1000;
    border-bottom: 1px solid rgba(148, 163, 184, 0.1);
  }

  .header-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--spacing-lg);
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 80px;
  }

  .logo-section {
    display: flex;
    align-items: center;
    gap: var(--spacing-md);
  }

  .logo-container {
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    border-radius: 12px;
    padding: 8px;
  }

  .logo-image {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }

  .title-section {
    display: flex;
    flex-direction: column;
    gap: 2px;
  }

  .lab-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text-primary);
    margin: 0;
    background: var(--gradient-medical);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .lab-subtitle {
    font-size: 0.8rem;
    color: var(--text-secondary);
    margin: 0;
    font-weight: 400;
    letter-spacing: 0.5px;
  }

  .nav-desktop {
    display: block;
  }

  .nav-list {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
    gap: var(--spacing-lg);
    height: 80px;
    align-items: center;
  }

  .nav-list li {
    height: 100%;
    display: flex;
    align-items: center;
  }

  .nav-list a,
  .lang-dropdown-btn {
    display: flex;
    align-items: center;
    height: 100%;
    position: relative;
  }

  .nav-list a {
    text-decoration: none;
    color: var(--text-primary);
    font-weight: 500;
    padding: 10px 0;
    transition: var(--transition-normal);
    position: relative;
  }

  .nav-list a::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--gradient-medical);
    transition: var(--transition-normal);
  }

  .nav-list a:hover::after,
  .nav-list a.active::after {
    width: 100%;
  }

  .nav-list a:hover,
  .nav-list a.active {
    color: var(--accent-color);
  }

  .lang-dropdown-parent {
    position: relative;
  }

  .lang-dropdown-btn {
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px 12px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    gap: 8px;
    font-weight: 500;
    color: var(--text-primary);
    transition: var(--transition-normal);
  }

  .lang-dropdown-btn:hover {
    background: rgba(6, 182, 212, 0.1);
  }

  .lang-flag {
    font-size: 1.2rem;
  }

  .lang-label {
    font-size: 0.9rem;
  }

  .lang-caret {
    font-size: 0.8rem;
    transition: var(--transition-normal);
  }

  .lang-dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    background: var(--card-bg);
    border-radius: var(--card-border-radius);
    box-shadow: var(--card-shadow);
    border: var(--card-border);
    min-width: 150px;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: var(--transition-normal);
  }

  .lang-dropdown.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .lang-option {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px 16px;
    text-decoration: none;
    color: var(--text-primary);
    transition: var(--transition-fast);
  }

  .lang-option:hover {
    background: rgba(6, 182, 212, 0.1);
  }

  .lang-option.active {
    background: var(--accent-color);
    color: white;
  }

  .hamburger {
    display: none;
    flex-direction: column;
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px;
    gap: 4px;
  }

  .hamburger span {
    width: 24px;
    height: 2px;
    background: var(--text-primary);
    transition: var(--transition-normal);
  }

  .nav-mobile {
    display: none;
    background: var(--card-bg);
    border-top: 1px solid rgba(148, 163, 184, 0.1);
    box-shadow: var(--card-shadow);
  }

  .nav-list-mobile {
    list-style: none;
    margin: 0;
    padding: var(--spacing-md);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
  }

  .nav-list-mobile a {
    display: block;
    padding: var(--spacing-sm);
    text-decoration: none;
    color: var(--text-primary);
    border-radius: 8px;
    transition: var(--transition-normal);
  }

  .nav-list-mobile a:hover,
  .nav-list-mobile a.active {
    background: rgba(6, 182, 212, 0.1);
    color: var(--accent-color);
  }

  @media (max-width: 768px) {
    .header-container {
      padding: 0 var(--spacing-md);
    }

    .nav-desktop {
      display: none;
    }

    .hamburger {
      display: flex;
    }

    .nav-mobile.show {
      display: block;
    }

    .lab-subtitle {
      display: none;
    }

    .logo-container {
      width: 50px;
      height: 50px;
    }
  }
</style>

<script>
    // Ë®ÄË™û„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥„ÅÆÂà∂Âæ°
  function initDropdowns() {
    const dropdownBtns = document.querySelectorAll('.lang-dropdown-btn');

    dropdownBtns.forEach(btn => {
      btn.addEventListener('click', (e) => {
        e.stopPropagation();
        const dropdown = btn.nextElementSibling as HTMLElement;
        if (dropdown) {
          dropdown.classList.toggle('show');
        }
      });
    });

    // „Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥Â§ñ„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Åü„ÇâÈñâ„Åò„Çã
    document.addEventListener('click', () => {
      document.querySelectorAll('.lang-dropdown').forEach(dropdown => {
        dropdown.classList.remove('show');
      });
    });
  }

  // „Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº„ÅÆÂà∂Âæ°
  function initMobileMenu() {
    const hamburger = document.getElementById('hamburger');
    const navMobile = document.getElementById('nav-mobile');

    if (hamburger && navMobile) {
      hamburger.addEventListener('click', () => {
        navMobile.classList.toggle('show');
        hamburger.classList.toggle('active');
      });
    }
  }

  // ÂàùÊúüÂåñ
  document.addEventListener('DOMContentLoaded', () => {
    initDropdowns();
    initMobileMenu();
  });
</script>